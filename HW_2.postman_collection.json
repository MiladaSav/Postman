{
	"info": {
		"_postman_id": "1f414763-c716-47ac-9d80-21317f360dd8",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200//\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"pm.test(\"Check Json\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"});\r",
							"var json = pm.response.json();\r",
							"// Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test('Check name', function() {\r",
							"    pm.expect(json.name).to.eql('Milada');\r",
							"})\r",
							"// Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test('Check age', function() {\r",
							"    pm.expect(json.age).to.eql('32');\r",
							"})\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test('Check salary', function() {\r",
							"    pm.expect(json.salary).to.eql(400);\r",
							"})\r",
							"//Спарсить request.\r",
							"var req = request.data\r",
							"console.log('request=',req)\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test('Check RespName=ReqName', function(){\r",
							"    pm.expect(json.name).to.eql(req.name)\r",
							"})\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test('Check RespAge=ReqAge', function(){\r",
							"    pm.expect(json.age).to.eql(req.age)\r",
							"})\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test('Check RespSalary=ReqSalary', function(){\r",
							"    pm.expect(json.salary).to.eql(1*req.salary)\r",
							"})\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log('family from response', json.family)\r",
							"\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test('Check u_salary_1_5_year=salary*4', function(){\r",
							"    pm.expect(json.family.u_salary_1_5_year).to.eql(4*req.salary)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Milada",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "400",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log('json =',jsonData)\r",
							"// Спарсить request.\r",
							"var req =pm.request.url.query.toObject()\r",
							"console.log('req =',req)\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name)\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age)\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(1*req.salary)\r",
							"});\r",
							"// Вывести в консоль параметр family из response.\r",
							"console.log('family = ',jsonData.family)\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"var dog_name =jsonData.family.pets.dog.name\r",
							"console.log(dog_name)\r",
							"pm.test(\"Check dog name\", function () {\r",
							"    pm.expect(dog_name).not.eq(undefined)\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"var dog_age =jsonData.family.pets.dog.age\r",
							"console.log(dog_age)\r",
							"pm.test(\"Check dog age\", function () {\r",
							"    pm.expect(dog_age).not.eq(undefined)\r",
							"});\r",
							"//Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Check dog name\", function () {\r",
							"    pm.expect(dog_name).to.eql('Luky')\r",
							"});\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Check dog age\", function () {\r",
							"    pm.expect(dog_age).to.eql(1*'4')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Mila&age=23&salary=200",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Mila"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"var resp =pm.response.json();\r",
							"console.log('response =', resp)\r",
							"//4. Спарсить request.\r",
							"var req = pm.request.url.query.toObject()\r",
							"console.log('request =', req)\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test('Check response name = request name', function(){\r",
							"    pm.expect(resp.name).to.eql(req.name)\r",
							"})\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test('Check response age = request age', function(){\r",
							"    pm.expect(resp.age).to.eql(1*req.age)\r",
							"})\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"console.log('Request salary =',req.salary)\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"console.log('Response salary =',resp.salary)\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log('Response salary =',resp.salary[0])\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log('Response salary =',resp.salary[1])\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log('Response salary =',resp.salary[2])\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test('Check response salary[0] = request salary', function(){\r",
							"    pm.expect(resp.salary[0]).to.eql(1*req.salary)\r",
							"})\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test('Check response salary[1] = request 2*salary', function(){\r",
							"    pm.expect(resp.salary[1]*1).to.eql(2*req.salary)\r",
							"})\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test('Check response salary[1] = request 2*salary', function(){\r",
							"    pm.expect(resp.salary[2]*1).to.eql(3*req.salary)\r",
							"})\r",
							"//15. Создать в окружении переменную name\r",
							"//16. Создать в окружении переменную age\r",
							"//17. Создать в окружении переменную salary\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set('name',req.name);\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set('age',req.age);\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set('salary',req.salary);\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for (var a in resp.salary){\r",
							"    console.log('salary','=', resp.salary[a])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Oksana&age=15&salary=100",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Oksana"
						},
						{
							"key": "age",
							"value": "15"
						},
						{
							"key": "salary",
							"value": "100"
						}
					]
				}
			},
			"response": []
		}
	]
}